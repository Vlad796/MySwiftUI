//
//  mySwiftUIPopoverUpdaded.swift
//  MySwiftUI
//
//  Created by –í–ª–∞–¥ –í–∞—Ä–ª–∞–º–æ–≤ on 20.01.2025.
//

import SwiftUI

struct mySwiftUIPopoverUpdaded: View {
    
    @State private var showPopover: Bool = false
    @State private var feedback = [
        "I love you too ‚ù§Ô∏è",
        "Let's go to the beach üèñÔ∏è",
        "I'll be waiting for you üïí"
    ]
    
    var body: some View {
        ZStack{
            Color(#colorLiteral(red: 0.6470588235, green: 0, blue: 0.06666666667, alpha: 1))
                .ignoresSafeArea()
            
            Button {
                showPopover.toggle()
            } label: {
                Text("You, my love ‚ù§Ô∏è")
                    .font(.headline)
                    .foregroundStyle(Color(#colorLiteral(red: 0.6470588235, green: 0, blue: 0.06666666667, alpha: 1)))
                    .padding(20)
                    .background(Color(#colorLiteral(red: 0.8941176471, green: 0.8941176471, blue: 0.8862745098, alpha: 1)))
                    .clipShape(RoundedRectangle(cornerRadius: 10))
            }
            //–ö—Ä–∞—Ç–∫–∞—è –≤–µ—Ä—Å–∏—è popover
//            .popover(isPresented: $showPopover) {       //popover –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫ —Ç–æ–º—É –æ–±—ä–µ–∫—Ç—É, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º –æ–Ω –∑–∞–∫—Ä–µ–ø–ª–µ–Ω
//                Text("You, my love ‚ù§Ô∏è")
//                    .presentationCompactAdaptation(.popover)    //–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ –∫–∞–∫–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –≤—ã–ª–µ–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
//            }
            
            //–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è popover
            .popover(isPresented: $showPopover, attachmentAnchor: .point(.top), content: {
                VStack(alignment: .center, spacing: 10){
                    ForEach(feedback, id: \.self) { option in
                        Button {
                            
                        } label: {
                            Text(option)
                        }
                        
                        if option != feedback.last! {
                            Divider()
                        }
                    }
                }
                    .padding(20)
                    .presentationCompactAdaptation(.popover)
            })
        }
    }
}

#Preview {
    mySwiftUIPopoverUpdaded()
}
